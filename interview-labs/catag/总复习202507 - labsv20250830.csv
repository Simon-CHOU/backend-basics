id,seq,path,qid,desc,,
lab001,1,E:\Pictures\learn\interview-complete\cicd\cicd.md:18,SANO010,lab: cold start latency,,
lab002,2,E:\Pictures\learn\interview-complete\cicd\cicd.md:29,SANO011,lab: 学习写DSL的最小知识 groovy kotlin,,
lab003,3,E:\Pictures\learn\interview-complete\cicd\cicd.md:53,SANO016,lab: 复盘总结例子。更像是“你印象深刻的bug是什么/你最有难度的一次生产问题排查经历是什么？,,
lab004,4,E:\Pictures\learn\interview-complete\cicd\cicd.md:54,SANO016,lab: 如果在云原生cloudnative环境中，怎么掺杂讲述？过往的例子尽管是微服务，存在上下游，哪怕是K8s部署的分布式应用，但是问题本身或者排查手段涉及“CICD”的话题似乎不多（我这我不知道算不算）,,
lab005,5,E:\Pictures\learn\interview-complete\cicd\cicd.md:62,SANO017,lab: 在阿里云真的做一次灰度。,,
lab006,6,E:\Pictures\learn\interview-complete\cicd\cicd.md:63,SANO017,lab: alex xu 和 software engineer at google 如何讨论灰度？,,
lab007,7,E:\Pictures\learn\interview-complete\cicd\cicd.md:64,SANO017,lab: 灰度的业务价值？ 灰度和AB-Test的异同？,,
lab008,8,E:\Pictures\learn\interview-complete\cicd\cicd.md:103,CITI016,lab: 观察一次pod的启动。,,
lab009,9,E:\Pictures\learn\interview-complete\cicd\cicd.md:117,CITI016,lab: 有了ingress，容器化部署的 spring boot 后端微服务之间还需要curl ip:port/path 或者 domain/path 互访吗？（domain可能是公司内网SF区或者DMZ区可用的域名）,,
lab010,10,E:\Pictures\learn\interview-complete\cicd\cicd.md:159,STMT026,lab: 总结docker-compose搭建开发环境、k9s连接测试环境看日志的技巧和配置。,,
lab011,11,E:\Pictures\learn\interview-complete\datastructure\datastructure.md:46,WDKJ027,"lab: int,long,BigDecimal。单线程到 fork-join。如何估算1000万个数最大的JVM内存占用？基于估算，如何决策是否考虑在计算中使用外存（outter memory）？",,
lab012,12,E:\Pictures\learn\interview-complete\db\mongo.md:29,WDKJ028,lab: spring data mogodb 构建一个MVP(minimum viable product),,
lab013,13,E:\Pictures\learn\interview-complete\db\mysql.md:28,WDKJ028,lab: 深分页实验。PageHelper深分页劣化benckmark.,,
lab014,14,E:\Pictures\learn\interview-complete\db\mysql.md:29,WDKJ028,lab:你怎么证明 dmbs的处理方式会是“传统的LIMIT X OFFSET Y查询，数据库需要扫描并跳过Y条记录，然后才开始返回X条记录。” ,,
lab015,15,E:\Pictures\learn\interview-complete\db\mysql.md:30,WDKJ028,lab: 如果主键无序uuid/snowfalke 又如何处理,,
lab016,16,E:\Pictures\learn\interview-complete\db\mysql.md:31,WDKJ028,"lab: pagehelper, spring-data-jpa 又如何实现深分页优化。",,
lab017,17,E:\Pictures\learn\interview-complete\db\mysql.md:49,WDKJ028,lab: 如何证明MVCC在工作。不懂MVCC会遇到哪些问题。,,
lab018,18,E:\Pictures\learn\interview-complete\db\mysql.md:89,WDKJ028,lab: 不改表结构，如何优化？,,
lab019,19,E:\Pictures\learn\interview-complete\db\mysql.md:476,ALIJ011,lab: 覆盖索引 vs 联合索引。覆盖索引的错误用法。,,
lab020,20,E:\Pictures\learn\interview-complete\db\mysql.md:524,ZTFU022,lab: 如何观测到dbms层面回表的发生,,
lab021,21,E:\Pictures\learn\interview-complete\db\postgres.md:14,KCZN002,lab: 根据高观点下的差异，性能、部署、迁移、集群、分库分表等选型逻辑。,,
lab022,22,E:\Pictures\learn\interview-complete\experience\cimb.md:7,XGDU002,lab: 本地复现。Spring Boot 下载接口 Range设置。,,
lab023,23,E:\Pictures\learn\interview-complete\experience\cra.md:19,XXWJ002,lab: cra 的上线材料整理。,,
lab024,24,E:\Pictures\learn\interview-complete\experience\crm.md:16,XXWJ002,lab: draw uml,,
lab025,25,E:\Pictures\learn\interview-complete\experience\crm.md:17,XXWJ002,lab: summary oc_memo,,
lab026,26,E:\Pictures\learn\interview-complete\experience\crm.md:31,MEIT003,lab: 复现 投产评审表的处理。,,
lab027,27,E:\Pictures\learn\interview-complete\experience\crm.md:47,MEIT004,lab: 如果重来一次，如何用架构设计来解决这些问题。,,
lab028,28,E:\Pictures\learn\interview-complete\experience\crm.md:62,MEIT005,lab: discuss DDD/cleanCode in this senario,,
lab029,29,E:\Pictures\learn\interview-complete\experience\crm.md:78,MEIT006,lab: 复现 UserUtil.getUserInfo(),,
lab030,30,E:\Pictures\learn\interview-complete\experience\crm.md:134,MEIT010,lab: 对账系统设计：跑批对账 vs 实时对账,,
lab031,31,E:\Pictures\learn\interview-complete\experience\crm.md:146,MEIT011,lab: 错了之后，需要手工curl 上游，获取JSON，阅读代码，结合当时下游的get 请求返回日志，对比当时的错误发生crm。通常都不是。#沉疴#分布式事务,,
lab032,32,E:\Pictures\learn\interview-complete\experience\crm.md:155,MEIT012,lab: BI 基于Hive搜集下游业务系统数据。暴露Restful接口供下游制度查询。下游通过自定义定时任务把数据拉倒自己的库里，或者同步查询。这种设计糟糕的根源是什么？从数学上的in-consistency会发生在哪里了？,,
lab033,33,E:\Pictures\learn\interview-complete\experience\crm.md:156,MEIT012,lab: c4model 绘制系统架构图,,
lab034,34,E:\Pictures\learn\interview-complete\experience\crm.md:180,XXWJ004,lab: 这种架构有没有术语来形容？优劣如何评价。,,
lab035,35,E:\Pictures\learn\interview-complete\experience\crm.md:181,XXWJ004,lab: tenant_id 需要补充在mybatis xml的每一个<where>条件中，测试和调试都很困难。如何优化。,,
lab036,36,E:\Pictures\learn\interview-complete\experience\fps.-sirius.md:14,WDKJ024,lab: siruis client jar注入原理,,
lab037,37,E:\Pictures\learn\interview-complete\experience\fps.-sirius.md:15,WDKJ024,lab: fps 分片上传下载 复现。,,
lab038,38,E:\Pictures\learn\interview-complete\experience\icsp.md:9,JDON014,lab: 我做个一个chatbox，后端 spring boot 做过websocket的endpoint，使用 activemq 在B/S转发chat message,,
lab039,39,E:\Pictures\learn\interview-complete\experience\icsp.md:10,JDON014,lab: zendesk chatbot platform integrate,,
lab040,40,E:\Pictures\learn\interview-complete\experience\icsp.md:19,JDON015,lab: 电话小结 POST,,
lab041,41,E:\Pictures\learn\interview-complete\experience\icsp.md:41,XGDU003,lab: PaaS 的核心 dashbaord 配置 subsystem url跳转。 其中 sub system的鉴权设计需要关注（token请求解密用户信息）,,
lab042,42,E:\Pictures\learn\interview-complete\experience\icsp.md:88,LINX005,lab: 同步多线程并发POST的最佳编排实践,,
lab043,43,E:\Pictures\learn\interview-complete\experience\icsp.md:104,ALIJ008,lab: ocss-framework 停更，一部分升级卡住。如果要解决，怎么解决？项目内能排除 parent 的spring boot吗？,,
lab044,44,E:\Pictures\learn\interview-complete\experience\schneider.md:21,XXWJ003,lab: 画出 cra的架构,,
lab045,45,E:\Pictures\learn\interview-complete\java\jmm.md:22,HUAW007,lab: 读jsr133。设法观测jvm各个空间的变化。,,
lab046,46,E:\Pictures\learn\interview-complete\java\jmm.md:23,HUAW007,lab: 考虑业务价值：生产监控如何使用探针监控JMM状态，#Althas#Promethus#Agent#Probe,,
lab047,47,E:\Pictures\learn\interview-complete\java\jmm.md:69,ANTG008,lab: 流量摘除：新发布的oom可以立刻回滚。如果发布有一段时间了，是否只能直接重启？,,
lab048,48,E:\Pictures\learn\interview-complete\java\jmm.md:70,ANTG008,lab: 恢复服务时，内存中在途的请求、没执行完的任务，如何无损恢复？oom应用卡死，还能优雅启停吗？（业务量小无所谓，如果业务量大，中间态的请求应该不少）#CleanArchitecture,,
lab049,49,E:\Pictures\learn\interview-complete\java\jmm.md:91,JITU003,lab: 手工把上面的问题都复现一遍。,,
lab050,50,E:\Pictures\learn\interview-complete\java\jmm.md:92,JITU003,lab: 复盘枚举业务场景下的OOM,,
lab051,51,E:\Pictures\learn\interview-complete\java\jmm.md:130,JDON017,lab: 除了cms还有哪些GC？如何选型？如何配置？如何benck回收性能？,,
lab052,52,E:\Pictures\learn\interview-complete\java\jmm.md:283,ZTFU013,lab: == 和 equals() 进行两个对象比较时，比较的具体是堆内存对象的哪一段内存？,,
lab053,53,E:\Pictures\learn\interview-complete\java\jmm.md:315,ZTFU014,lab: 如何观测 GC 以证实纸面的理论?,,
lab054,54,E:\Pictures\learn\interview-complete\java\jmm.md:344,ZTFU016,lab: -XX:+Use<Collector> 现代jvm 有哪些垃圾收集器？这些收集器是什么关系？一个JVM是否只能配置1个收集器？最佳实践配置哪个收集器？压测横评？,,
lab055,55,E:\Pictures\learn\interview-complete\java\jmm.md:375,ZTFU029,lab: “跟踪JVM” 是什么意思？trace what?,,
lab056,56,E:\Pictures\learn\interview-complete\java\jmm.md:376,ZTFU029,lab: 按照SOP亲手操作一遍，理解原理。,,
lab057,57,E:\Pictures\learn\interview-complete\java\jmm.md:390,KCZN016,lab: 不可名状。如何观测？,,
lab058,58,E:\Pictures\learn\interview-complete\java\jmm.md:409,KCZN016,lab: Object Memory Layout 示例计算,,
lab059,59,E:\Pictures\learn\interview-complete\java\jmm.md:432,KCZN016,lab: 观测字节码、JVM，验证 “两个字符串字面量相加，赋值给字符串变量，生成1个对象”的机制。,,
lab060,60,E:\Pictures\learn\interview-complete\java\jmm.md:453,STMT008,lab: how to prove it?,,
lab061,61,E:\Pictures\learn\interview-complete\java\juc.md:12,TOUG002,lab: 用一个非Web示例，花式编排completabeFuture掌握API的用法。,,
lab062,62,E:\Pictures\learn\interview-complete\java\juc.md:13,TOUG002,lab: 使用 completableFuture 和 @Async的区别,,
lab063,63,E:\Pictures\learn\interview-complete\java\juc.md:14,TOUG002,lab: Future->CompletableFuture 的迁移，模拟迁移一个旧项目,,
lab064,64,E:\Pictures\learn\interview-complete\java\juc.md:15,TOUG002,lab: 从 completableFuture 架构和实现原理，研究API设计和面向对象设计模式。#CleanArchitecture,,
lab065,65,E:\Pictures\learn\interview-complete\java\juc.md:96,JDON008,lab: thenApply vs thenCompose,,
lab066,66,E:\Pictures\learn\interview-complete\java\juc.md:107,WDKJ005,lab: allOf底层原理。 CompletableFuture 基于 Future 新的发展-架构设计和设计模式,,
lab067,67,E:\Pictures\learn\interview-complete\java\juc.md:228,ALIJ003,lab: explain java.util.concurrent.locks #RoadTo21,,
lab068,68,E:\Pictures\learn\interview-complete\java\juc.md:229,ALIJ003,lab: 如果不局限在 java.util.concurrent.locks， 如何自顶向下地讨论Java编程语言中“锁”的实现？,,
lab069,69,E:\Pictures\learn\interview-complete\java\juc.md:319,LINX006,"lab: 复现 Map<businessId, Future> 多线程并发同步调用RESTful API并合并返回。",,
lab070,70,E:\Pictures\learn\interview-complete\java\juc.md:340,ZYWL001,lab: 通过线程局部变量或消息传递来避免共享状态，即为一种“进程内架构”。,,
lab071,71,E:\Pictures\learn\interview-complete\java\juc.md:350,ZYWL002,lab: 枚举业务场景，考虑：并发量、锁竞争程度、高级功能，形成决策树,,
lab072,72,E:\Pictures\learn\interview-complete\java\juc.md:363,ZYWL009,lab: 寒食君,,
lab073,73,E:\Pictures\learn\interview-complete\java\juc.md:395,XXWJ012,lab: 单步调试AQS，体验AQS的工作原理，观察“自旋”的发生。徒手画出状态图#状态机,,
lab074,74,E:\Pictures\learn\interview-complete\java\juc.md:396,XXWJ012,"lab: 阅读 Craig, T. (1993). Building FIFO and priority-queueing spin locks from atomic swap.",,
lab075,75,E:\Pictures\learn\interview-complete\java\juc.md:410,XXWJ012,lab: 徒手画出 Mark Word 锁升级的过程,,
lab076,76,E:\Pictures\learn\interview-complete\java\juc.md:562,PWCD023,"lab: ArrayList 并发安全控制。 如何理解“对于线程安全需求，Java提供了几种解决方案：Vector（内置同步）、Collections.synchronizedList（装饰器模式）、CopyOnWriteArrayList（读写分离），以及在业务层使用显式锁控制。""
77,E:\Pictures\learn\interview-complete\java\juc.md:563""",PWCD023,lab: 设计洞察，为何 ArrayList 没有像 ConcurrentHashMap 之于 Hashmap 那样的高性能线程安全版本
lab078,78,E:\Pictures\learn\interview-complete\java\juc.md:628,PWCD023,lab:  对资源（或者说锁）进行排序，并强制所有线程都必须按照相同的、预先定义好的顺序来获取锁。这样的通过破坏“循环等待”条件来避免死锁的方案，有何优缺点？#按序加锁,,
lab079,79,E:\Pictures\learn\interview-complete\java\juc.md:641,PWCD023,lab: 类似“按序加锁”的“主动舍弃潜在的并发度，追求确定性的死锁预防”的trade-off设计和架构思想，在 java 世界中，还有那些典型的成功案例？,,
lab080,80,E:\Pictures\learn\interview-complete\java\juc.md:642,PWCD023,lab: 按序加锁，如何导致“降低并发度”,,
lab081,81,E:\Pictures\learn\interview-complete\java\juc.md:823,STMT009,lab: coding verify.,,
lab082,82,E:\Pictures\learn\interview-complete\java\juc.md:855,STMT014,lab: Future.get() mechanism,,
lab083,83,E:\Pictures\learn\interview-complete\java\juc.md:865,STMT015,lab: Future、CompletionService、CompletableFuture介绍与对比,,
lab084,84,E:\Pictures\learn\interview-complete\java\juc.md:894,STMT016,lab: 为什么常见的编码规约中生产最佳实践都是自定义线程池？Executors 工厂方法的隐患是什么？,,
lab085,85,E:\Pictures\learn\interview-complete\java\juc.md:953,STMT018,lab: newFixiedThreadPool vs newCachedThreadPool load test,,
lab086,86,E:\Pictures\learn\interview-complete\java\juc.md:1003,STMT020,lab: get hands dirty.,,
lab087,87,E:\Pictures\learn\interview-complete\java\juc.md:1024,STMT021,lab: Thread Pool Configuration and Work Queue Management,,
lab088,88,E:\Pictures\learn\interview-complete\java\juc.md:1047,STMT028,lab: trigger ConcurrentModificationException,,
lab089,89,E:\Pictures\learn\interview-complete\java\lang.md:51,SANO002,lab: 构建一个multi-module playground，切换jdk编译运行，一览每个版本的特性。,,
lab090,90,E:\Pictures\learn\interview-complete\java\lang.md:66,SANO003,lab: clean code 和 重构中如何讨论 pure function,,
lab091,91,E:\Pictures\learn\interview-complete\java\lang.md:89,SANO004,lab: 避免Null的架构设计，和DDD有何关联？,,
lab092,92,E:\Pictures\learn\interview-complete\java\lang.md:103,ANTG009,lab: 区分Checked和Unchecked异常 #架构设计,,
lab093,93,E:\Pictures\learn\interview-complete\java\lang.md:104,ANTG009,lab: 考虑事务（transaction）的影响，如何讨论异常处理,,
lab094,94,E:\Pictures\learn\interview-complete\java\lang.md:150,ANTG010,lab: DDD 如何讨论异常处理？,,
lab095,95,E:\Pictures\learn\interview-complete\java\lang.md:283,XXWJ008,lab: 无论是 JDK 自带的 Proxy 和第三方的 cglib， 对于应用层的开发者来说，具体有哪些业务价值？,,
lab096,96,E:\Pictures\learn\interview-complete\java\lang.md:307,XXWJ009,lab: 为什么动态代理是AOP的雏形？,,
lab097,97,E:\Pictures\learn\interview-complete\java\lang.md:327,MSXF005,lab:观察，编译后，@annotation注解是否保留到字节码?,,
lab098,98,E:\Pictures\learn\interview-complete\java\lang.md:378,MSXF006,lab: CountDownLatch、CompletableFuture的allOf，以及传统的join方法 对比决策,,
lab099,99,E:\Pictures\learn\interview-complete\java\lang.md:404,MSXF006,lab: 数据结构、优劣、时间复杂度，应用场景。需要背贯口，不能每次现想，吞吞吐吐。,,
lab100,100,E:\Pictures\learn\interview-complete\java\lang.md:427,PWCD030,lab: 同为有序集合，LinkedHashSet（有序）、TreeSet（排序）的区别？ LinkedHashMap（有序）、TreeMap（排序）的区别？,,
lab101,101,E:\Pictures\learn\interview-complete\java\lang.md:428,PWCD030,lab: WeakHashMap 从来没用过。没有用过的先找对应的leetcode题目练一练。,,
lab102,102,E:\Pictures\learn\interview-complete\java\lang.md:502,KCZN009,lab: 翻代码diff 1.7 1.8 hashmap @寒食君。,,
lab103,103,E:\Pictures\learn\interview-complete\java\lang.md:503,KCZN009,lab: 验证hashmap 1.7的bug和1.8的修复效果,,
lab104,104,E:\Pictures\learn\interview-complete\java\lang.md:524,STMT002,lab: high perspective ? 架构层面的hash冲突考量？,,
lab105,105,E:\Pictures\learn\interview-complete\java\lang.md:620,STMT005,"lab: 多线程环境下拼接，选StringBuffer，但实际开发优先考虑并发包下的更高效方案。"" 更高效方案指的是什么方案？""",,
lab106,106,E:\Pictures\learn\interview-complete\microservice\microservice.md:25,HUAW002,lab: cache aside read/write cdc in real world,,
lab107,107,E:\Pictures\learn\interview-complete\microservice\microservice.md:71,HUAW009,lab: 若干次等保测评，若干次安全扫描和渗透测试，都改了什么。,,
lab108,108,E:\Pictures\learn\interview-complete\microservice\microservice.md:86,HUAW010,lab: Double Submit Cookie in practice,,
lab109,109,E:\Pictures\learn\interview-complete\microservice\microservice.md:105,ANTG002,lab: 本地消息表 in practice,,
lab110,110,E:\Pictures\learn\interview-complete\microservice\microservice.md:115,ANTG003,lab: MQ 事务型消息，是否支持回滚呢？ in practice,,
lab111,111,E:\Pictures\learn\interview-complete\microservice\microservice.md:131,JITU001,lab: 分级兜底 in practice,,
lab112,112,E:\Pictures\learn\interview-complete\microservice\microservice.md:141,JDON003,lab: dbms artile_table vs es in real world 复现,,
lab113,113,E:\Pictures\learn\interview-complete\microservice\microservice.md:161,JDON004,lab: 除了“每张表加一个 tenant_id”，多租户到底还有什么？,,
lab114,114,E:\Pictures\learn\interview-complete\microservice\microservice.md:176,JDON005,lab: Nonce 防止重放 in practice,,
lab115,115,E:\Pictures\learn\interview-complete\microservice\microservice.md:177,JDON005,lab: 统一认证中心（SSO） ：对于多应用场景，我们会构建统一认证中心，支持OAuth2.0或OpenID Connect等标准协议，实现单点登录（SSO），提升用户体验和管理效率。 in practice,,
lab116,116,E:\Pictures\learn\interview-complete\microservice\microservice.md:193,JDON006,lab: 故障预案模板 best practice,,
lab117,117,E:\Pictures\learn\interview-complete\microservice\microservice.md:213,JDON012,lab: activemq rabbitmq rocketmq kafka 选型决策树,,
lab118,118,E:\Pictures\learn\interview-complete\microservice\microservice.md:214,JDON012,lab: 通过 mq异步化，和通过定时任务调度异步化的区别,,
lab119,119,E:\Pictures\learn\interview-complete\microservice\microservice.md:229,JDON019,lab: ws弱网下，提升连接存活能力、保障消息可靠送达、会话可恢复、数据可同步。有没有可用的框架已经封装了这些能力？socket.io,,
lab120,120,E:\Pictures\learn\interview-complete\microservice\microservice.md:248,CITI009,lab: Spring Webflux handle backpressure,,
lab121,121,E:\Pictures\learn\interview-complete\microservice\microservice.md:265,CITI018,lab: 创建一个足够小的例程，尝试 ingress服务间调用。,,
lab122,122,E:\Pictures\learn\interview-complete\microservice\microservice.md:285,PDDO001,lab: 秒杀最小MVP，动手实验 限流排队、读写分离、多级缓存、canel&mq与最终一致性,,
lab123,123,E:\Pictures\learn\interview-complete\microservice\microservice.md:303,PDDO001,lab: 实现本地消息表、事务消息、事件驱动+SAGA模式，压测证明将消息丢失率降为 0。,,
lab124,124,E:\Pictures\learn\interview-complete\microservice\microservice.md:316,MEIT013,"lab: 过去我的服务都要求强一致性（要对账），创建一个最终一致性的例子, 动手体感 trade-off",,
lab125,125,E:\Pictures\learn\interview-complete\microservice\microservice.md:333,XGDU001,lab: 动手体会 RESTful API或gRPC 设计和调用的不同,,
lab126,126,E:\Pictures\learn\interview-complete\microservice\microservice.md:346,WDKJ004,lab: 上游的数据是海量的，本地系统（在线用户信息查询）作为单一功能的服务，分配资源有限，无法等量的接收上述服务的全量信息和变更。如何演进？,,
lab127,127,E:\Pictures\learn\interview-complete\microservice\microservice.md:347,WDKJ004,lab: 尝试基于 dataware house 的 user data aggregation,,
lab128,128,E:\Pictures\learn\interview-complete\microservice\microservice.md:358,WDKJ010,lab: 尝试基于 DDD 分层，设计一个简单的微服务架构，以Unite Test OJ为例。,,
lab129,129,E:\Pictures\learn\interview-complete\microservice\microservice.md:406,WDKJ018,lab: 复现 read path/ write path 的各种策略，并实现统计极端不一致的频率。,,
lab130,130,E:\Pictures\learn\interview-complete\microservice\microservice.md:407,WDKJ018,lab: 复现删除缓存失败的自动重试，和终极解决方案，订阅数据库变更日志CDC,,
lab131,131,E:\Pictures\learn\interview-complete\microservice\microservice.md:434,WDKJ020,lab: 复现基于事件驱动的最终一致性，上下游通过MQ解耦,,
lab132,132,E:\Pictures\learn\interview-complete\microservice\microservice.md:450,WDKJ021,lab: SEGA in practice,,
lab133,133,E:\Pictures\learn\interview-complete\microservice\microservice.md:477,PWCD025,lab: SOAP in practice,,
lab134,134,E:\Pictures\learn\interview-complete\microservice\microservice.md:502,PWCD026,lab: 复现 pmss-core 的前后端加密,,
lab135,135,E:\Pictures\learn\interview-complete\microservice\microservice.md:503,PWCD026,lab: POST请求默认不缓存  GET请求可以被缓存和分享， 这里的“缓存”是什么意思？,,
lab136,136,E:\Pictures\learn\interview-complete\microservice\microservice.md:545,PWCD027,lab: 复现： kms秘钥生成、Google Auth 2fa登录、klpa扫码登录2fa、 pmss-core 前后端加密。 desensitizer 日志脱敏。crm 打印安全字段。数据库字段加密 接入集团sec平台获取加密配置。,,
lab137,137,E:\Pictures\learn\interview-complete\microservice\microservice.md:560,ZTFU025,lab: 复现： 基于 Token 和 Redis 缓存的接口鉴权方案。,,
lab138,138,E:\Pictures\learn\interview-complete\mq\mq.md:200,CITI001,lab: 构建一个客服bot MVP，benck复现 可靠性、顺序性、幂等性,,
lab139,139,E:\Pictures\learn\interview-complete\oo\oo.md:179,ZTFU024,lab: 如何在编码设计和clean code层面考虑 is-a 和 can-do，并实践抽象类、接口,,
lab140,140,E:\Pictures\learn\interview-complete\oo\oo.md:225,ZTFU024,lab: 亲手枚举abstract class 和 interface 的使用场景,,
lab141,141,E:\Pictures\learn\interview-complete\performance\performance.md:107,JITU004,lab: 考虑缓存一致性，以及主动失效的限制。,,
lab142,142,E:\Pictures\learn\interview-complete\performance\performance.md:125,PDDO005,lab: bench 以springboot应用为例，数据库I/O（1次查询）耗时是什么数量级(ms)，发送消息（send msg to mq)是什么数量级？,,
lab143,143,E:\Pictures\learn\interview-complete\performance\performance.md:182,ZTFU001,lab: 除了多线程并发（比如同步串行请求改为completablefutre多线程并发请求），还有没有解决 i/o-bound serialization bottleneck的方案？,,
lab144,144,E:\Pictures\learn\interview-complete\performance\performance.md:183,ZTFU001,lab: Netty 有没有可以开箱即用的比 Executor +CompletableFutre 性能更高的工具？benchmark 一下,,
lab145,145,E:\Pictures\learn\interview-complete\performance\performance.md:232,ALIJ012,lab: 制造一次问题，利用工具进行分析 莲路监控 dump gc jstack jstat 定位问题。,,
lab146,146,E:\Pictures\learn\interview-complete\redis\redis.md:386,ZTFU009,lab: 在本地和云环境，动手实践 定界->诊断->归因->复盘 的完整流程。,,
lab147,147,E:\Pictures\learn\interview-complete\spring\cloud.md:15,MSXF002,lab: Spring Cloud 和 Kubernetes 混合治理,,
lab148,148,E:\Pictures\learn\interview-complete\spring\cloud.md:40,STMT025,lab: Spring官方推荐的最佳实践中， Cloud 如何和 Boot 集成或混合使用？,,
lab149,149,E:\Pictures\learn\interview-complete\spring\cloud.md:44,STMT025,lab: Spring Cloud 的能力和Kubernetes 高度重合，实践中如何选型？,,
lab150,150,E:\Pictures\learn\interview-complete\spring\reactive.md:11,CITI006,lab: customer service platform chatbox in Webflux way.,,
lab151,151,E:\Pictures\learn\interview-complete\spring\reactive.md:21,CITI007,lab: mono flex SSE .,,
lab152,152,E:\Pictures\learn\interview-complete\spring\reactive.md:29,CITI008,lab: webflux exception handling,,
lab153,153,E:\Pictures\learn\interview-complete\spring\spring.md:24,MSXF007,lab: start design normal java jar vs spring boot jar,,
lab154,154,E:\Pictures\learn\interview-complete\spring\spring.md:72,SANO001,lab: 2.* -> 3.* checklist,,
lab155,155,E:\Pictures\learn\interview-complete\spring\spring.md:105,SANO007,lab: Actuator endpoint,,
lab156,156,E:\Pictures\learn\interview-complete\spring\spring.md:120,SANO008,lab: loast test verify,,
lab157,157,E:\Pictures\learn\interview-complete\spring\spring.md:135,SANO009,lab: Class Loading Optimization,,
lab158,158,E:\Pictures\learn\interview-complete\spring\spring.md:175,ANTG014,lab: build unified exception handling from scratch start.spring.io,,
lab159,159,E:\Pictures\learn\interview-complete\spring\spring.md:176,ANTG014,lab: Spring Boot 自带的统一异常  vs 企业二次封装的 #架构设计,,
lab160,160,E:\Pictures\learn\interview-complete\spring\spring.md:211,XXWJ006,lab: 观测 bean 的加载顺序，并验证调整顺序的办法。,,
lab161,161,E:\Pictures\learn\interview-complete\spring\spring.md:225,XXWJ007,lab: BeanPostProcessor,,
lab162,162,E:\Pictures\learn\interview-complete\spring\spring.md:244,MSXF003,lab: [Steps to build a custom Spring Boot Starter](https://www.google.com/search?q=build+your+own+spring+boot+starter),,
lab163,163,E:\Pictures\learn\interview-complete\spring\spring.md:245,MSXF003,lab: 过去的项目里用过哪些公司自己写的 Starter 吗？加解、日志脱敏、接入配置中心的client,,
lab164,164,E:\Pictures\learn\interview-complete\spring\spring.md:303,PWCD004,lab: create a mvp to compare sping and  spring boot,,
lab165,165,E:\Pictures\learn\interview-complete\spring\spring.md:430,PWCD012,lab: Bean 如何确保线程安全,,
lab166,166,E:\Pictures\learn\interview-complete\spring\spring.md:474,PWCD015,lab: reproduce circular dependency then resovle.,,
lab167,167,E:\Pictures\learn\interview-complete\spring\spring.md:491,PWCD020,lab: practice in one cheatsheet,,
lab168,168,E:\Pictures\learn\interview-complete\spring\spring.md:533,ZTFU023,lab: AOP in practice,,
lab169,169,E:\Pictures\learn\interview-complete\spring\spring.md:556,KCZN019,lab: boot starting process,,
lab170,170,E:\Pictures\learn\interview-complete\spring\spring.md:571,KCZN020,lab: 生命周期主流程和关键扩展点。,,
lab171,171,E:\Pictures\learn\interview-complete\spring\spring.md:602,KCZN022,lab: @Resource 适用的具体场景,,
lab172,172,E:\Pictures\learn\interview-complete\spring\spring.md:603,KCZN022,lab: @Resource 和 @Autowired 一定不能相互替代的场景,,
lab173,173,E:\Pictures\learn\interview-complete\spring\spring.md:604,KCZN022,lab: testability @Autowired 字段 vs 构造器注入（Constructor Injection）,,
lab174,174,E:\Pictures\learn\interview-complete\spring\spring.md:635,KCZN024,lab: practice.,,
lab175,175,E:\Pictures\learn\interview-complete\spring\spring.md:650,KCZN024,lab: practice,,
lab176,176,E:\Pictures\learn\interview-complete\spring\tomcat.md:34,JITU008,lab: 解决办法是不是只有让客户端延长超时时间（修改超时时间配置）？,,
lab177,177,E:\Pictures\learn\interview-complete\spring\tomcat.md:62,JITU008,lab: 复现各种方案，做成mvp，并配套集成测试。,,
lab178,178,E:\Pictures\learn\interview-complete\spring\transaction.md:59,LINX011,lab: 翻代码单步调试代码,,
lab179,179,E:\Pictures\learn\interview-complete\tddddd\tdd-ddd.md:30,SANO019,"lab: try split domain/business in FPS, Test-OJ",,
lab180,180,E:\Pictures\learn\interview-complete\tddddd\tdd-ddd.md:51,SANO020,lab: test pyramid & test doubles in practice,,
lab181,181,E:\Pictures\learn\interview-complete\tddddd\tdd-ddd.md:62,SANO021,lab: 如何合理地定量地度量 e2e test和 unit-test的健康覆盖率？,,
lab182,182,E:\Pictures\learn\interview-complete\tddddd\tdd-ddd.md:114,SANO023,lab: 以一个CRUD需求，动手实践TDD，创建对照组，对比不用TDD的代码质量。,,